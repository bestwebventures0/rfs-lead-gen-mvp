# Name of your application. Used to uniquely configure containers.
service: production-app

# Name of the container image.
image: riafin/production-app

# Deploy to the production server - DigitalOcean 1GB Droplet - IP 128.199.27.182
servers:
  web:
    hosts:
      - 128.199.27.182
    labels:
      traefik.http.routers.production-app.rule: Host(`app.riafin.com`)
      traefik.http.routers.production-app_secure.entrypoints: websecure
      traefik.http.routers.production-app_secure.rule: Host(`app.riafin.com`)
      traefik.http.routers.production-app_secure.tls: true
      traefik.http.routers.production-app_secure.tls.certresolver: letsencrypt

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: riafin
  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  # clear:
  #   DB_HOST: 192.168.0.2
  secret:
    - RAILS_MASTER_KEY

volumes:
  - "/storage:/rails/storage"
  - "db:/rails/db/production"

# Setup ssl cert (https)
traefik:
  options:
    publish:
      - "443:443"
    volume:
      - "/letsencrypt/acme.json:/letsencrypt/acme.json"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    certificatesResolvers.letsencrypt.acme.email: "support@riafin.com"
    certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web
